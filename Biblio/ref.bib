%---------------------------------------------------------------------------%
%-                                                                         -%
%-                             Bibliography                                -%
%-                                                                         -%
%---------------------------------------------------------------------------%
@INPROCEEDINGS{9112373,
  author={Liu, Qingyang and Haihong, E. and Song, Meina},
  booktitle={2020 International Conference on Inventive Computation Technologies (ICICT)}, 
  title={{The Design of Multi-Metric Load Balancer for Kubernetes}}, 
  year={2020},
  volume={},
  number={},
  pages={1114-1117},
  doi={10.1109/ICICT48043.2020.9112373}
}
@INPROCEEDINGS{9045136,
  author={Dua, Amit and Randive, Sahil and Agarwal, Aditi and Kumar, Neeraj},
  booktitle={2020 IEEE 17th Annual Consumer Communications \& Networking Conference (CCNC)}, 
  title={{Efficient Load balancing to serve Heterogeneous Requests in Clustered Systems using Kubernetes}}, 
  year={2020},
  volume={},
  number={},
  pages={1-2},
  doi={10.1109/CCNC46108.2020.9045136}
}
@INPROCEEDINGS{9359175,
  author={Cui, Jieqi and Chen, Pengfei and Yu, Guangba},
  booktitle={2020 IEEE 26th International Conference on Parallel and Distributed Systems (ICPADS)}, 
  title={{A Learning-based Dynamic Load Balancing Approach for Microservice Systems in Multi-cloud Environment}}, 
  year={2020},
  volume={},
  number={},
  pages={334-341},
  doi={10.1109/ICPADS51040.2020.00052}
}
@Article{s22082869,
  AUTHOR = {Nguyen, Quang-Minh and Phan, Linh-An and Kim, Taehong},
  TITLE = {{Load-Balancing of Kubernetes-Based Edge Computing Infrastructure Using Resource Adaptive Proxy}},
  JOURNAL = {Sensors},
  VOLUME = {22},
  YEAR = {2022},
  NUMBER = {8},
  ARTICLE-NUMBER = {2869},
  URL = {https://www.mdpi.com/1424-8220/22/8/2869},
  PubMedID = {35458853},
  ISSN = {1424-8220},
  ABSTRACT = {Kubernetes (K8s) is expected to be a key container orchestration tool for edge computing infrastructures owing to its various features for supporting container deployment and dynamic resource management. For example, its horizontal pod autoscaling feature provides service availability and scalability by increasing the number of replicas. kube-proxy provides traffic load-balancing between replicas by distributing client requests equally to all pods (replicas) of an application in a K8s cluster. However, this approach can result in long delays when requests are forwarded to remote workers, especially in edge computing environments where worker nodes are geographically dispersed. Moreover, if the receiving worker is overloaded, the request-processing delay can increase significantly. To overcome these limitations, this paper proposes an enhanced load balancer called resource adaptive proxy (RAP). RAP periodically monitors the resource status of each pod and the network status among worker nodes to aid in load-balancing decisions. Furthermore, it preferentially handles requests locally to the maximum extent possible. If the local worker node is overloaded, RAP forwards its requests to the best node in the cluster while considering resource availability. Our experimental results demonstrated that RAP could significantly improve throughput and reduce request latency compared with the default load-balancing mechanism of K8s.},
  DOI = {10.3390/s22082869}
}
@INPROCEEDINGS{9284506,
  author={Liu, Lei and He, Xiang and Tu, Zhiying and Wang, Zhongjie},
  booktitle={2020 IEEE International Conference on Services Computing (SCC)}, 
  title={{MV4MS: A Spring Cloud based Framework for the Co-Deployment of Multi-Version Microservices}}, 
  year={2020},
  volume={},
  number={},
  pages={194-201},
  doi={10.1109/SCC49832.2020.00033}
}
@INPROCEEDINGS{10077895,
  author={Zhou, Jiali and Li, Xin and Wang, Qinhui and Qin, Xiaolin and Miao, WeiWei and Tian, Jianwei},
  booktitle={2022 IEEE 28th International Conference on Parallel and Distributed Systems (ICPADS)}, 
  title={Balancing Load: An Adaptive Traffic Management Scheme for Microservices}, 
  year={2023},
  volume={},
  number={},
  pages={641-648},
  doi={10.1109/ICPADS56603.2022.00089}
}
@misc{pattern_service,
  author       = {Philcalcado},
  howpublished = {\url{https://philcalcado.com/2017/08/03/pattern_service_mesh.html}},
  title        = {{Pattern: Service Mesh}},
  year         = {Aug 3, 2017}
}
@ARTICLE{9161999,
  author={Nguyen, Nguyen and Kim, Taehong},
  journal={IEEE Communications Magazine}, 
  title={Toward Highly Scalable Load Balancing in Kubernetes Clusters}, 
  year={2020},
  volume={58},
  number={7},
  pages={78-83},
  doi={10.1109/MCOM.001.1900660}
}
@INPROCEEDINGS{6472470,
  author={Nuaimi, Klaithem Al and Mohamed, Nader and Nuaimi, Mariam Al and Al-Jaroodi, Jameela},
  booktitle={2012 Second Symposium on Network Cloud Computing and Applications}, 
  title={{A Survey of Load Balancing in Cloud Computing: Challenges and Algorithms}}, 
  year={2012},
  volume={},
  number={},
  pages={137-142},
  doi={10.1109/NCCA.2012.29}
}
@article{mampage2022holistic,
  title={{A holistic view on resource management in serverless computing environments: Taxonomy and future directions}},
  author={Mampage, Anupama and Karunasekera, Shanika and Buyya, Rajkumar},
  journal={ACM Computing Surveys (CSUR)},
  volume={54},
  number={11s},
  pages={1--36},
  year={2022},
  publisher={ACM New York, NY}
}
@phdthesis{shitole2022dynamic,
  title={Dynamic Load Balancing of Microservices in Kubernetes Clusters using Service Mesh},
  author={Shitole, Abishek Sanjay},
  year={2022},
  school={Dublin, National College of Ireland}
}
@article{zhong2022machine,
  title={{Machine learning-based orchestration of containers: A taxonomy and future directions}},
  author={Zhong, Zhiheng and Xu, Minxian and Rodriguez, Maria Alejandra and Xu, Chengzhong and Buyya, Rajkumar},
  journal={ACM Computing Surveys (CSUR)},
  volume={54},
  number={10s},
  pages={1--35},
  year={2022},
  publisher={ACM New York, NY}
}
@article{neumann2018analysis,
  title={An analysis of public REST web service APIs},
  author={Neumann, Andy and Laranjeiro, Nuno and Bernardino, Jorge},
  journal={IEEE Transactions on Services Computing},
  volume={14},
  number={4},
  pages={957--970},
  year={2018},
  publisher={IEEE}
}
@inproceedings{song2018auto,
  title={{An auto scaling system for API gateway based on Kubernetes}},
  author={Song, Meina and Zhang, Chengcheng and Haihong, E},
  booktitle={2018 IEEE 9th International Conference on Software Engineering and Service Science (ICSESS)},
  pages={109--112},
  year={2018},
  organization={IEEE}
}
@inproceedings{he2020optimal,
  title={Optimal evolution planning and execution for multi-version coexisting microservice systems},
  author={He, Xiang and Tu, Zhiying and Liu, Lei and Xu, Xiaofei and Wang, Zhongjie},
  booktitle={Service-Oriented Computing: 18th International Conference, ICSOC 2020, Dubai, United Arab Emirates, December 14--17, 2020, Proceedings 18},
  pages={3--18},
  year={2020},
  organization={Springer}
}
@inproceedings{sahana2023weight,
  title={Weight based Load Balancing in Kubernetes using AWS},
  author={Sahana, B and Kumaraswamy, T and Nachiketh, RG and Navadeep, S and Noronha, Joycil},
  booktitle={2023 International Conference on Intelligent Data Communication Technologies and Internet of Things (IDCIoT)},
  pages={629--634},
  year={2023},
  organization={IEEE}
}
@misc{OpenAPI_Specification,
  author       = {OpenAPI},
  howpublished = {\url{https://github.com/OAI/OpenAPI-Specification}},
  title        = {{OpenAPI Specification}},
  year         = {2023}
}
@misc{Swagger,
  author       = {Swagger},
  howpublished = {\url{http://swagger.io/}},
  title        = {{Swagger}},
  year         = {2023}
}
@misc{Swagger-Codegen,
  author       = {Swagger},
  howpublished = {\url{http://swagger.io/tools/swagger-codegen/}},
  title        = {{Swagger-Codegen}},
  year         = {2023}
}
@misc{Swagger-Inspector,
  author       = {Swagger},
  howpublished = {\url{http://swagger.io/tools/swagger-inspector/}},
  title        = {{Swagger-Inspector}},
  year         = {2023}
}
@inproceedings{ed2018automatic,
  title={Automatic generation of test cases for REST APIs: A specification-based approach},
  author={Ed-Douibi, Hamza and Izquierdo, Javier Luis C{\'a}novas and Cabot, Jordi},
  booktitle={2018 IEEE 22nd international enterprise distributed object computing conference (EDOC)},
  pages={181--190},
  year={2018},
  organization={IEEE}
}
@inproceedings{zhang2019resource,
  title={Resource-based test case generation for restful web services},
  author={Zhang, Man and Marculescu, Bogdan and Arcuri, Andrea},
  booktitle={Proceedings of the genetic and evolutionary computation conference},
  pages={1426--1434},
  year={2019}
}
@INPROCEEDINGS{8811961,
  author={Atlidakis, Vaggelis and Godefroid, Patrice and Polishchuk, Marina},
  booktitle={2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE)}, 
  title={RESTler: Stateful REST API Fuzzing}, 
  year={2019},
  volume={},
  number={},
  pages={748-758},
  doi={10.1109/ICSE.2019.00083}
}
@misc{Docker,
  author       = {Veritas},
  howpublished = {\url{https://www.veritas.com/zh/cn/information-center/containerization}},
  title        = {{Container}},
  year         = {2020}
}
@misc{service,
  author       = {Coder},
  howpublished = {\url{https://cloud.tencent.com/developer/article/1628099}},
  title        = {{Service Mesh \& API Gateway}},
  year         = {2020}
}
%---------------------------------------------------------------------------%
